"use client"

import type React from "react"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Camera, X, User, MapPin, GraduationCap, Heart, Star } from "lucide-react"
import { useRouter } from "next/navigation"

const TEEN_INTERESTS = [
  { name: "–ò–≥—Ä—ã", emoji: "üéÆ", category: "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è" },
  { name: "–ú—É–∑—ã–∫–∞", emoji: "üéµ", category: "—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ" },
  { name: "–†–∏—Å–æ–≤–∞–Ω–∏–µ", emoji: "üé®", category: "—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ" },
  { name: "–°–ø–æ—Ä—Ç", emoji: "‚öΩ", category: "–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å" },
  { name: "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", emoji: "üì∏", category: "—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ" },
  { name: "–ß—Ç–µ–Ω–∏–µ", emoji: "üìö", category: "—É—á–µ–±–∞" },
  { name: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", emoji: "üíª", category: "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏" },
  { name: "–¢–∞–Ω—Ü—ã", emoji: "üíÉ", category: "–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å" },
  { name: "–ö–∏–Ω–æ", emoji: "üé¨", category: "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è" },
  { name: "–ê–Ω–∏–º–µ", emoji: "üå∏", category: "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è" },
  { name: "K-Pop", emoji: "üé§", category: "–º—É–∑—ã–∫–∞" },
  { name: "TikTok", emoji: "üì±", category: "—Å–æ—Ü—Å–µ—Ç–∏" },
  { name: "YouTube", emoji: "üì∫", category: "—Å–æ—Ü—Å–µ—Ç–∏" },
  { name: "–ö–æ—Å–ø–ª–µ–π", emoji: "üé≠", category: "—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ" },
  { name: "–°–∫–µ–π—Ç–±–æ—Ä–¥", emoji: "üõπ", category: "–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å" },
  { name: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", emoji: "‚úàÔ∏è", category: "–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è" },
  { name: "–ö—É–ª–∏–Ω–∞—Ä–∏—è", emoji: "üë®‚Äçüç≥", category: "—Ö–æ–±–±–∏" },
  { name: "–ú–æ–¥–∞", emoji: "üëó", category: "—Å—Ç–∏–ª—å" },
  { name: "–ù–∞—É–∫–∞", emoji: "üî¨", category: "—É—á–µ–±–∞" },
  { name: "–Ø–∑—ã–∫–∏", emoji: "üåç", category: "—É—á–µ–±–∞" },
]

export default function ProfileSetupPage() {
  const [selectedInterests, setSelectedInterests] = useState<string[]>([])
  const [profileData, setProfileData] = useState({
    name: "",
    school: "",
    grade: "",
    location: "",
    bio: "",
    avatar: "",
  })
  const router = useRouter()

  const toggleInterest = (interest: string) => {
    setSelectedInterests((prev) =>
      prev.includes(interest) ? prev.filter((i) => i !== interest) : prev.length < 8 ? [...prev, interest] : prev,
    )
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    router.push("/dashboard")
  }

  const getInterestColor = (category: string) => {
    const colors = {
      —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è: "bg-purple-100 text-purple-700 border-purple-200",
      —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ: "bg-pink-100 text-pink-700 border-pink-200",
      –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: "bg-green-100 text-green-700 border-green-200",
      —É—á–µ–±–∞: "bg-blue-100 text-blue-700 border-blue-200",
      —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: "bg-gray-100 text-gray-700 border-gray-200",
      –º—É–∑—ã–∫–∞: "bg-red-100 text-red-700 border-red-200",
      —Å–æ—Ü—Å–µ—Ç–∏: "bg-cyan-100 text-cyan-700 border-cyan-200",
      —Ö–æ–±–±–∏: "bg-yellow-100 text-yellow-700 border-yellow-200",
      —Å—Ç–∏–ª—å: "bg-indigo-100 text-indigo-700 border-indigo-200",
      –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è: "bg-orange-100 text-orange-700 border-orange-200",
    }
    return colors[category as keyof typeof colors] || "bg-gray-100 text-gray-700 border-gray-200"
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-100 via-blue-50 to-cyan-100">
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-2xl mx-auto">
          <div className="text-center mb-8">
            <div className="flex justify-center mb-4">
              <span className="text-6xl">üé®</span>
            </div>
            <h1 className="text-4xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent mb-2">
              –°–æ–∑–¥–∞–π —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!
            </h1>
            <p className="text-gray-600 text-lg">–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∫–ª–∞—Å—Å–Ω—ã—Ö –¥—Ä—É–∑–µ–π üåü</p>
          </div>

          <form onSubmit={handleSubmit} className="space-y-6">
            {/* –§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è */}
            <Card className="border-0 shadow-lg bg-white/80 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-xl">
                  <Camera className="w-6 h-6 text-purple-500" />
                  –¢–≤–æ–µ —Ñ–æ—Ç–æ üì∏
                </CardTitle>
                <CardDescription>–î–æ–±–∞–≤—å –∫—Ä—É—Ç–æ–µ —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –¥—Ä—É–∑—å—è —Ç–µ–±—è —É–∑–Ω–∞–ª–∏!</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex flex-col items-center space-y-4">
                  <div className="relative">
                    <Avatar className="w-32 h-32 border-4 border-white shadow-lg">
                      <AvatarImage src={profileData.avatar || "/placeholder.svg?height=128&width=128"} />
                      <AvatarFallback className="text-3xl bg-gradient-to-br from-purple-400 to-blue-400 text-white">
                        <User className="w-16 h-16" />
                      </AvatarFallback>
                    </Avatar>
                    <div className="absolute -bottom-2 -right-2 w-10 h-10 cool-gradient rounded-full flex items-center justify-center">
                      <span className="text-lg">‚ú®</span>
                    </div>
                  </div>
                  <Button
                    variant="outline"
                    type="button"
                    className="rounded-xl border-2 hover:border-purple-400 bg-transparent"
                  >
                    <Camera className="w-4 h-4 mr-2" />
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ
                  </Button>
                </div>
              </CardContent>
            </Card>

            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <Card className="border-0 shadow-lg bg-white/80 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-xl">
                  <Star className="w-6 h-6 text-yellow-500" />
                  –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–∞ üìù
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="name" className="text-base font-medium">
                    –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?
                  </Label>
                  <div className="relative">
                    <User className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                    <Input
                      id="name"
                      placeholder="–¢–≤–æ–µ –∏–º—è"
                      className="pl-11 h-12 text-base rounded-xl border-2 focus:border-purple-400"
                      value={profileData.name}
                      onChange={(e) => setProfileData((prev) => ({ ...prev, name: e.target.value }))}
                      required
                    />
                  </div>
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label htmlFor="school" className="text-base font-medium">
                      –®–∫–æ–ª–∞/–ö–æ–ª–ª–µ–¥–∂
                    </Label>
                    <div className="relative">
                      <GraduationCap className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                      <Input
                        id="school"
                        placeholder="–®–∫–æ–ª–∞ ‚Ññ1"
                        className="pl-11 h-12 text-base rounded-xl border-2 focus:border-purple-400"
                        value={profileData.school}
                        onChange={(e) => setProfileData((prev) => ({ ...prev, school: e.target.value }))}
                        required
                      />
                    </div>
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="grade" className="text-base font-medium">
                      –ö–ª–∞—Å—Å
                    </Label>
                    <Input
                      id="grade"
                      placeholder="10"
                      className="h-12 text-base rounded-xl border-2 focus:border-purple-400"
                      value={profileData.grade}
                      onChange={(e) => setProfileData((prev) => ({ ...prev, grade: e.target.value }))}
                      required
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="location" className="text-base font-medium">
                    –ì–æ—Ä–æ–¥
                  </Label>
                  <div className="relative">
                    <MapPin className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                    <Input
                      id="location"
                      placeholder="–ú–æ—Å–∫–≤–∞"
                      className="pl-11 h-12 text-base rounded-xl border-2 focus:border-purple-400"
                      value={profileData.location}
                      onChange={(e) => setProfileData((prev) => ({ ...prev, location: e.target.value }))}
                      required
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="bio" className="text-base font-medium">
                    –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ
                  </Label>
                  <Textarea
                    id="bio"
                    placeholder="–ü—Ä–∏–≤–µ—Ç! –Ø –ª—é–±–ª—é... –ò—â—É –¥—Ä—É–∑–µ–π –¥–ª—è..."
                    className="min-h-[100px] text-base rounded-xl border-2 focus:border-purple-400 resize-none"
                    value={profileData.bio}
                    onChange={(e) => setProfileData((prev) => ({ ...prev, bio: e.target.value }))}
                  />
                </div>
              </CardContent>
            </Card>

            {/* –ò–Ω—Ç–µ—Ä–µ—Å—ã */}
            <Card className="border-0 shadow-lg bg-white/80 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-xl">
                  <Heart className="w-6 h-6 text-red-500" />
                  –¢–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã üéØ
                </CardTitle>
                <CardDescription>–í—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è! (–º–∏–Ω–∏–º—É–º 3, –º–∞–∫—Å–∏–º—É–º 8)</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-2 sm:grid-cols-3 gap-3">
                  {TEEN_INTERESTS.map((interest) => (
                    <Badge
                      key={interest.name}
                      variant="outline"
                      className={`cursor-pointer transition-all p-3 h-auto flex flex-col items-center gap-2 rounded-xl border-2 ${
                        selectedInterests.includes(interest.name)
                          ? "teen-gradient text-white border-purple-400 shadow-lg transform scale-105"
                          : `${getInterestColor(interest.category)} hover:shadow-md hover:scale-105`
                      }`}
                      onClick={() => toggleInterest(interest.name)}
                    >
                      <span className="text-2xl">{interest.emoji}</span>
                      <span className="text-sm font-medium text-center">{interest.name}</span>
                      {selectedInterests.includes(interest.name) && (
                        <X className="w-4 h-4 absolute -top-1 -right-1 bg-white text-purple-600 rounded-full p-0.5" />
                      )}
                    </Badge>
                  ))}
                </div>
                <div className="mt-4 text-center">
                  <p className="text-sm text-gray-500">
                    –í—ã–±—Ä–∞–Ω–æ: {selectedInterests.length} –∏–∑ 8
                    {selectedInterests.length >= 3 ? " ‚úÖ" : " (–Ω—É–∂–Ω–æ –µ—â–µ " + (3 - selectedInterests.length) + ")"}
                  </p>
                </div>
              </CardContent>
            </Card>

            <Button
              type="submit"
              className="w-full h-14 text-lg font-bold teen-gradient hover:opacity-90 rounded-xl shadow-lg"
              disabled={selectedInterests.length < 3}
            >
              {selectedInterests.length < 3 ? "–í—ã–±–µ—Ä–∏ –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã üéØ" : "–ì–æ—Ç–æ–≤–æ! –ù–∞–π—Ç–∏ –¥—Ä—É–∑–µ–π üöÄ"}
            </Button>
          </form>
        </div>
      </div>
    </div>
  )
}
